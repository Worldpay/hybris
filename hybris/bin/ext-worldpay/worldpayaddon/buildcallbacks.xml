<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 [y] hybris Platform

 Copyright (c) 2000-2014 hybris AG
 All rights reserved.

 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.

  
--><!--
 All hybris buildcallbacks.xml macrodefinitions:
 
 Build/Documentation
 
	 before/after ant macro "clean"
		 <macrodef name="worldpayaddon_before_clean"/>
		 <macrodef name="worldpayaddon_after_clean"/>
	 
	 before/after ant macro "build"
		 <macrodef name="worldpayaddon_before_build"/>
		 <macrodef name="worldpayaddon_after_build"/>
		 
	 before/after ant macro "compile_core" - the core module of the extension
		 <macrodef name="worldpayaddon_before_compile_core">
		 <macrodef name="worldpayaddon_after_compile_core">
	 
	 before/after ant macro "compile_web" - the web module of the extension
		 <macrodef name="worldpayaddon_before_compile_web" />
		 <macrodef name="worldpayaddon_after_compile_web" />
	 
	 before/after ant macro "compile_hmc" - the hmc module of the extension
		 <macrodef name="worldpayaddon_before_compile_hmc" />
		 <macrodef name="worldpayaddon_after_compile_hmc" />
 
 Preparing extension
 
	 will be called in the beginning of the ant call and only once (also when using multiple 
	 ant targets e.g. ant build yunittest)	
		 <macrodef name="worldpayaddon_only_once_prepare"/>
 
 Creating ear module/production
 
	 before/after ant macro "ear"
		 <macrodef name="worldpayaddon_before_ear"/>
		 <macrodef name="worldpayaddon_after_ear"/>

	 before/after ant macro "production" - for hybris server only
		 <macrodef name="worldpayaddon_before_production" />
		 <macrodef name="worldpayaddon_after_production" />
 
 JUnit Test
 
	 before/after ant macro "yunitinit" 
		 <macrodef name="worldpayaddon_before_yunitinit" />
		 <macrodef name="worldpayaddon_after_yunitinit" />
	 
	 before/after ant macro "yunit"
		 <macrodef name="worldpayaddon_before_yunit" />
		 <macrodef name="worldpayaddon_after_yunit" />
		 
 Distribution package
 
 	 before/after ant macro "dist" - internal target; only for use when platform is available in source code
		 <macrodef name="worldpayaddon_after_dist"/>
		 <macrodef name="worldpayaddon_before_dist"/>
	 
	 before/after ant macro "dist_copy" - internal target; only for use when platform is available in source code
		 <macrodef name="worldpayaddon_before_dist_copy"/>
		 <macrodef name="worldpayaddon_after_dist_copy"/>
 
-->
<project name="worldpayaddon_buildcallbacks">

    <macrodef name="worldpayaddon_after_build">
        <sequential>
            <if>
                <isset property="ext.cmscockpit.path"/>
                <then>
                    <echo level="info" message="worldpayaddon - Copying custom wizard to cmscockpit..."/>
                    <copy todir="${ext.cmscockpit.path}/web/webroot/cmscockpit/images">
                        <fileset dir="${ext.worldpayaddon.path}/resources/worldpayaddon/cmscockpit/images">
                            <include name="**/**.*"/>
                        </fileset>
                    </copy>
                </then>
            </if>

            <if>
                <isset property="ext.btgcockpit.path"/>
                <then>
                    <echo level="info" message="worldpayaddon - Copying custom wizard to btgcockpit..."/>
                    <copy todir="${ext.btgcockpit.path}/web/webroot/cmscockpit/images">
                        <fileset dir="${ext.worldpayaddon.path}/resources/worldpayaddon/cmscockpit/images">
                            <include name="**/**.*"/>
                        </fileset>
                    </copy>
                </then>
            </if>
        </sequential>
    </macrodef>

    <!--
        Run: ant all allwebtests -Dtestclasses.extensions=e2ystorefront -Dtestclasses.packages=com.worldpay.* -Dtestclasses.addonname=e2ystorefront
        Playing with hybris rules here! For an unknown reason, the web callback has no extension name.
    -->
    <macrodef name="_before_yunitweb">
        <sequential>
            <if>
                <isset property="testclasses.addonname"/>
                <then>
                    <build_addon_testsrc addonname="${testclasses.addonname}" testsrcpath="${ext.worldpayaddon.path}/acceleratoraddon/web/testsrc" />
                </then>
            </if>
            <if>
                <isset property="testclasses.occaddonname"/>
                <then>
                    <build_addon_testsrc addonname="${testclasses.occaddonname}" testsrcpath="${ext.worldpayoccaddon.path}/acceleratoraddon/web/testsrc" />
                </then>
            </if>
        </sequential>
    </macrodef>

    <macrodef name="build_addon_testsrc" >
        <attribute name="addonname"/>
        <attribute name="testsrcpath"/>
        <sequential>
            <var name="addonBasePathValue" value="ext.@{addonname}.path" />
            <var name="addonBaseClasspathValue" value="ext.@{addonname}.classpath" />
            <propertycopy override="true" name="addonBasePath" from="${addonBasePathValue}"/>
            <propertycopy override="true" name="addonBaseClasspath" from="${addonBaseClasspathValue}"/>
            <var name="addonWebtestJavaSrc" value="@{testsrcpath}"/>
            <var name="addonWebtestJavaDest" value="${addonBasePath}/web/testsrc"/>
            <var name="addonWebtestClassDest" value="${addonBasePath}/web/testclasses"/>

            <echo level="info" message="# worldpayaddon (@{addonname})- Copying addon specific web tests sources to ${addonWebtestJavaDest}"/>

            <copy todir="${addonWebtestJavaDest}" overwrite="true">
                <fileset dir="${addonWebtestJavaSrc}">
                    <include name="**/*"/>
                </fileset>
            </copy>

            <echo level="info" message="# worldpayaddon (@{addonname})- Compiling addon specific web tests sources to ${addonWebtestJavaDest}"/>

            <javacompile destdir="${addonBasePath}/web/testclasses">
                <source>
                    <dirset dir="${addonBasePath}/web">
                        <include name="testsrc"/>
                    </dirset>
                </source>
                <additionalclasspath>
                    <fileset dir="${addonBasePath}/web/webroot">
                        <include name="WEB-INF/lib/**.jar"/>
                    </fileset>
                    <fileset dir="${addonBasePath}">
                        <include name="bin/*.jar"/>
                    </fileset>
                    <dirset dir="${addonBasePath}/web/webroot/WEB-INF">
                        <include name="classes"/>
                    </dirset>
                    <pathelement path="${addonBaseClasspath}"/>
                </additionalclasspath>
            </javacompile>

            <echo level="info" message="# worldpayaddon (@{addonname}) - Invoking testClassesScanner"/>
            <outofdate>
                <sourcefiles>
                    <fileset dir="${addonBasePath}">
                        <include name="testsrc/**"/>
                        <include name="web/testsrc/**"/>
                    </fileset>
                </sourcefiles>
                <targetfiles path="${HYBRIS_TEMP_DIR}/touch/${addonBasePath}_testsrctouch"/>
                <sequential>
                    <testClassesScanner extension="@{addonname}" fileExtensions="java,groovy"
                                        testSourceFolders="testsrc,web/testsrc"/>
                </sequential>
            </outofdate>
        </sequential>
    </macrodef>


    <macrodef name="_after_yunitweb">
        <sequential>
            <if>
                <isset property="testclasses.occaddonname"/>
                <then>
                    <!-- need to be deleted, if not ycommercewebservices cannot build after -->
                    <delete dir="${ext.ycommercewebservices.path}/web/testsrc/com/worldpay" />
                </then>
            </if>
            <echo level="info" message="# worldpayaddon - Renaming generated test report"/>
            <move file="${HYBRIS_LOG_DIR}/junit/TESTS-TestSuites.xml" tofile="${HYBRIS_LOG_DIR}/junit/WEBTESTS-TestSuites.xml"/>
        </sequential>
    </macrodef>

</project>
