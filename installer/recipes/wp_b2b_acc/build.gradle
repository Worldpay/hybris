// Hybris b2b_acc recipe extended with Worldpay addon
apply plugin: 'installer-platform-plugin'
apply plugin: 'installer-addon-plugin'

def config = {
    localProperties {
        property 'googleApiKey', ''
        property 'website.powertools.http', 'http://powertools.local:9001/yb2bacceleratorstorefront'
        property 'website.powertools.https', 'https://powertools.local:9002/yb2bacceleratorstorefront'
        property 'testclasses.addonname', 'yb2bacceleratorstorefront'
    }

    extensions {
        scanPathWithAutoLoad '${HYBRIS_BIN_DIR}/y-ext/ext-worldpayfulfilment'

        extName 'commercesearchbackoffice'
        extName 'b2bcommercebackoffice'
        extName 'solrfacetsearchbackoffice'

        extName 'yacceleratorinitialdata'
        extName 'yacceleratorfulfilmentprocess'
        extName 'ycommercewebservices'
        extName 'ycommercewebservicestest'
        extName 'orderselfserviceaddon'

        extName 'powertoolsstore'
        extName 'solrserver'

        extName 'acceleratorwebservicesaddon'
        extName 'b2bacceleratoraddon'
        extName 'commerceorgaddon'
        extName 'commerceorgsamplesaddon'

        extName 'customersupportbackoffice'
        extName 'customerticketingaddon'

        extName 'rulebuilderbackoffice'
        extName 'couponbackoffice'
        extName 'droolsruleengineservices'
        extName 'couponfacades'
        extName 'promotionenginesamplesaddon'

        extName 'textfieldconfiguratortemplatebackoffice'
        extName 'textfieldconfiguratortemplateaddon'

        extName 'cmswebservices'
        extName 'smarteditwebservices'
        extName 'cmssmarteditwebservices'
        extName 'permissionswebservices'
        extName 'smarteditaddon'
        extName 'cmssmartedit'
        extName 'assistedservicestorefront'

        extName 'previewpersonalizationweb'
        extName 'personalizationcmsweb'
        extName 'personalizationsmartedit'
        extName 'personalizationsampledataaddon'
        extName 'personalizationpromotions'
        extName 'personalizationpromotionsweb'
        extName 'personalizationservicesbackoffice'
        extName 'personalizationpromotionsbackoffice'
        extName 'personalizationcmsbackoffice'

        extName 'assistedserviceatddtests'
        extName 'promotionengineatddtests'
        extName 'commercesearchatddtests'
        extName 'textfieldconfiguratortemplateatddtests'

        extName 'worldpayaddonbackoffice'
        extName 'worldpayapi'
        extName 'worldpayb2baddon'
        extName 'worldpaynotifications'
        extName 'worldpaysampledataaddon'
        extName 'worldpayhac'
    }
}

task setup {
    doLast {
        def pl = platform(config)
        pl.setup()

        pl.executeAntTarget 'extgen -Dinput.template=yacceleratorstorefront -Dinput.name=yb2bacceleratorstorefront -Dinput.package=de.hybris.platform.yb2bacceleratorstorefront'

        pl.extensions {
            extName 'yb2bacceleratorstorefront'
        }
        pl.setup()

        pl.project.addons {
            names "worldpayb2baddon,worldpaysampledataaddon,b2bacceleratoraddon,commerceorgaddon,commerceorgsamplesaddon,promotionenginesamplesaddon,textfieldconfiguratortemplateaddon,smarteditaddon,assistedservicestorefront,customerticketingaddon,orderselfserviceaddon"
            template "yacceleratorstorefront"
            storeFronts "yb2bacceleratorstorefront"
            platform pl
        }

        pl.project.addons {
            names "acceleratorwebservicesaddon"
            template "ycommercewebservices"
            storeFronts "ycommercewebservices"
            platform pl
        }
    }
}

task initialize {
    doLast {
        def pl = platform(config)
        pl.build()
        pl.initialize()
    }
}

task start {
    doLast {
        def pl = platform(config)
        pl.start()
    }
}